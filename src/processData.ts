interface JsonData {
  [key: string]: string | number;
}

interface InfoStructure {
  [key: string]: { [key: string]: string | number };
}

interface Data {
  name: string;
  lastName: string;
  email: string;
  companyName:String;
  id: number | string;
  matrix: { [key: string]: string };
}







async function processData(jsonData: JsonData) {

  
if(!jsonData)return
const data: Data = {
  name: "",
  lastName: "",
  email: "",
  companyName:"",
  id: 0,
  matrix: {},
};
  const infoStructure: InfoStructure = {
    "პროცესის საზღვრები": {
      "1": `თანამშრომელთა/სტრუქტურული ერთეულების საქმიანობები ხშირად გაურკვეველია და
     სიტუაციურად, სპონტანურად იცვლება.`,

      "2": `თანამშრომლების/სტრუქტურული ერთეულების საქმიანობის საზღვრები ჩამოყალიბებულია,
    თუმცა მათ შორის ურთიერთქმედების
    წერტილები მკაფიოდ არ არის განსაზღვრული/სტანდარტიზებული.`,

      "3": `კომპანიის მასშტაბით, სტრუქტურული ერთეულებს შორის კოორდინაციის და
     ურთიერთქმედების წერტილებიმკაფიოდაა განსაზღვრული/სტანდარტიზებული.`,

      "4": `დეპარტამენტებსა და გუნდებს შორის წინასწარ შეთანხმებულია მომსახურების
    დონეები, მაგ. რეაგირების დრო, ხარისხი. ამასთანავე კომპანიაში
     ინსტიტუციონალიზებულია ამ შეთანხმებებისა და პროცესების საზღვრების მდგრადი მათვის მექანიზმი.`,

      "5": `პროცესების საზღვრები დინამიური და მოქნილია ბიზნეს გარემოს ცვლილებების და გარე
     ფაქტორების მიმართ. კომპანიას შეუძლია პროცესების საზღვრების და რესურსების განაწილების
      სწრაფი ცვლილება, რეალურ დროში მიღებულ ინფორმაციაზე დაყრდნობით.`,
    },

    "პროცესების აღწერილობები": {
      "1": `კომპანიაში პროცესების ფორმალური დოკუმენტაცია საერთოდ არ არსებობს, ან ძალიან მწირია.`,

      "2": `პროცესები ფრაგმენტულადაა დოკუმენტირებული და უმეტესწილად ასახავენ სტრუქტურული
       ერთეულების შიდა საქმიანობას.`,

      "3": `კომპანიაში ყველა მნიშვნელოვანი კროს-ფუნქციური პროცესი (პროცესი რომელშიც მონაწილეობს
      ორი, ან მეტი სტრუქტურული ერთეული) აღწერილი, დოკუმენტირებული და სტანდარტიზებულია.
       არსებობს დოკუმენტირების ერთი, კომპანიის მასშტაბით შეჯერებული სტანდარტი.`,

      "4": `არსებობს პროცესების დოკუმენტების მართვის ინსტიტუციონალიზებული, მდგრადი პრაქტიკა
      - ფორმალური წესებითა და მეთოდებით, რომელიც უზრუნველყოფს აღწერილობების დროულ
      განახლებას, ვერსიების კონტროლს, შენახვას, შესაბამისი დაინტერესებული მხარისთვის სწრაფ გაზიარებას.`,

      "5": `პროცესების მოდელირებისთვის და დოკუმენტირებისთვის გამოიყენება ელექტრონული პლატფორმები
       (მაგ. BPM Suite), რომელიც ინტეგრირებულია კომპანიის სხვადასხვა ინფორმაციულ სისტემებთან;
       რაც უზრუნველყოფს პროცესების სიმულაციურ ანალიზს, აღწერილობების სწრაფ განახლებას,
       კროს-ფუნქციურ კოლაბორაციას და ხელმისაწვდომობას.`,
    },

    "თამანშრომლების ფუნქციები და როლები": {
      "1": `თანამშრომლებს შორის ფუნქცია-მოვალეობები/საქმიანობები მკაფიოდ არაა
       განაწილებული - მეტ-ნაკლებად ყველა ყველაფერს აკეთებს.`,

      "2": `თანამშრომელთა ფუნქციები და როლები მეტ-ნაკლებად განაწილებული და
       განსაზღვრულია, კომპანიის სტრუქტურული ერთეულების მიხედვით.`,

      "3": `თანამშრომელთა როლები და ფუნქციები მკაფიოდაა განსაზღვრული და ერთგვაროვნად 
      აღიქმება კომპანიის მასშტაბით.`,

      "4": `თანამშრომელთა ფუნქციები და როლები განსაზღვრულია კროს-ფუნქციური პროცესების
       ანალიზის და დიზაინის საფუძველზე. თანამშრომელთა საქმიანობის დიზაინი უზრუნველყოფს 
       პროცესების მიზნების და დავალებების შესრულებას.`,

      "5": `თანამშრომელთა როლები და სამუშაოს დიზაინი დინამიურია და მაქსიმალურად ერგება გარემო 
      ცვლილებებს. პროცესების გაუმჯობესების გუნდებში მონაწილეობა, საუკეთესო პრაქტიკების
       იდენტიფიცირება და გაზიარება თანამშრომელთა ერთ-ერთი ფორმალური ფუნქციაა.`,
    },

    "მომხმარებელზე ორიენტირებული ბიზნეს პროცესები": {
      "1": `კომპანიაში არ არსებობს მკაფიო და შეჯერებული წარმოდგენა იმის შესახებ, თუ ვინ არიან საბოლოო 
       მომხმარებლები. მომხმარებელთა საჭიროებები არასისტამატიურადაა გათვალისწინებული.`,

      "2": `კომპანიაში ერთმნიშვნელოვნად იდენტიფიცირებულია და ყველასთვის გასაგებია საკვანძო
       მომწოდებლები და მომხმარებელთა სეგმენტები. მომხმარებელთა საჭიროებების გათვალისწინება
        ხდება, თუმცა კომპანია უმეტესწილად მაინც ფოკუსირებულია შიდა საქმიანობაზე.`,

      "3": `მომხმარებლების საჭიროებები ცნობილია და ერთმნიშვნელოვანია, თუ რა სურს/სჭირდება მომხმარებელს.
       პროცესების მოდელირება და დიზაინი ხორციელდება მომხმარებლის საჭიროებების მიხედვით.`,

      "4": `კომპანიაში დანერგილია მომხმარებლის უკუკავშირის შეგროვების სტრუქტურირებული მექანიზმები.
       მიღებული ინფორმაცია აქტიურად გამოიყენება პროცესის ანალიზისა და გაუმჯობესებისთვის.`,

      "5": `ინფორმაცია მომხმარებლის გამოცდილების და კმაყოფილების შესახებ რეალურ დროში გროვდება 
      შესაბამის ელექტრონულ სისტემებში. მომხმარებლის უკუკავშირი პროცესების და პროდუქტების 
      უწყვეტი გაუმჯობესების ერთ-ერთი მთავარი წყაროა.`,
    },

    "პროცესების ინდიკატორები": {
      "1": `კომპანიაში არ არსებობს შესრულების ინდიკატორები. შესრულების მონიტორინგი არ ხორციელდება.`,

      "2": `კომპანიაში შესრულება უმეტესწილად ფასდება ფინანსური ინდიკატორებით (ხარჯი/შემოსავალი).
       ინდიკატორები რეგულარულად არ გამოიყენება შესრულების გასაზომად.`,

      "3": `კომპანიაში ინდიკატორებით იზომება და ფასდება პროცესების შესრულება და შედეგები.`,

      "4": `პროცესების შესრულება იზომება და იმართება სტატისტიკური/რაოდენობრივი მეთოდებით. 
      ინდიკატორები გამოიყენება, შესრულების სამართავად და პროცესების ოპტიმიზაციისთვის. ინდიკატორების
       მოდელირება ხორციელდება რეგულარულად, კომპანიის სტრატეგიული მიზნებისა და ამოცანების საფუძველზე.`,

      "5": `კომპანიაში შესრულების ინდიკატორების მონიტორინგი მიმდინარეობს რეალურ დროში, რისთვისაც 
      გამოიყენება ანალიტიკის მოწინავე ტექნოლოგიები, მაგ. Business Activity Monitoring (BAM) სისტემები, 
      ხელოვნური ინტელექტი (AI), მანქანური სწავლების ალგორითმები (ML) და ა.შ. ინდიკატორები იძლევა
       საკითხების წინასწარ იდენტიფიცირებისა და აღმოფხვრის შესაძლებლობას.`,
    },

    "მმართველობის როლი": {
      "1": `კომპანიაში მკაფიოდ არაა გამიჯნული თანამშრომლების და მენეჯმენტის როლები და ფუნქციები. 
      მმართველობა უმეტესწილად არაფორმალურია.`,

      "2": `სტრუქტურულ ერთეულებს ჰყავთ მენეჯერები განსაზღვრული ფუნქცია-მოვალეობებით, რომლებიც
       ხელმძღვანელობენ სტრუქტურული ერთეულის შიდა საქმიანობას.`,

      "3": `კროს-ფუნქციურ პროცესს (პროცესი რომელშიც მონაწილეობს ორი, ან მეტი სტრუქტურული ერთეული) 
      ჰყავს მმართველი, რომელიც პასუხისმგებელია ამ პროცესის შედეგებზე.`,

      "4": `ორგანიზაციაზე დანერგილია ბიზნეს პროცესების მართვის ერთგვაროვანი პრაქტიკა. პროცესის მმართველის 
      როლი მკაფიოდაა ჩამოყალიბებული და მოიცავს პროცესების ანალიზს, ოპტიმიზაციას, დაგეგმვას, რესურსების
       უზრუნველყოფას და შესრულების მონიტორინგს.`,

      "5": `პროცესის მმართველი აქტიურად წაახალისებს გუნდის წევრებს, რათა მათ გამოცადონ ახალი იდეები და 
      წვლილი შეიტანონ პროცესების უწყვეტ გაუმჯობესებაში. პროცესის მმართველი უწყვეტი გაუმჯობესების
       კულტურის ერთ-ერთი მთავარი შემოქმედია.`,
    },

    "გადაწყვეტილებების მიღების პრაქტიკები": {
      "1": `გადაწყვეტილებები კომპანიაში მიიღება ინტუიტურად და სპონტანურად, უმეტესწილად კომპანიის 
      დირექტორის მიერ.`,

      "2": `მნიშვნელოვანი გადაწყვეტილებები კომპანიაში უფრო მეტად მიიღება ხარისხობრივ შეფასებებზე დაყრდნობით,
       ვიდრე რაოდენობრივი მონაცემების საფუძველზე. ძირითადი გადაწყვეტილების მიმღები პირი დირექტორია,
        თუმცა გარკვეული გადაწყვეტილების დელეგირება, სიტუაციიდან გამომდინარე, ხდება მენეჯერებზე.`,

      "3": `გადაწყვეტილებები მიიღება არსებული ინფორმაციის, მონაცემების სიღრმისეული მოდელირების და ანალიზის 
      საფუძველზე. შუა რგოლის მენეჯმენტზე მკაფიოდაა დელეგირებული ბიზნეს-პროცესების განსახორციელებლად 
      აუცილებელი სტანდარტული გადაწყვეტილებები.`,

      "4": `მნიშვნელოვანი საოპერაციო გადაწყვეტილებების მისაღებად აქტიურად გამოიყენება კომპანიის პროცესებიდან 
      მიღებული რაოდენობრივი ინფორმაცია. პროცესის განსახორციელებლად აუცილებელი სტანდარტული
       გადაწყვეტილებები გარკვეულწილად ავტომატიზებულია (IT სისტემაშია ინტეგრირებული)`,

      "5": `გადაწყვეტილების მისაღებად გამოიყენება საპროგნოზო ანალიტიკის (predictive/prescriptive analytics)
       ტექნიკები. პროცესის განსახორციელებლად აუცილებელი სტანდარტული გადაწყვეტილებების უმეტესობა 
       ავტომატიებულია (ხორციელდება IT სისტემის მიერ)`,
    },

    "პროცესების გაუმჯობესების პრაქტიკები": {
      "1": `კომპანიაში არ არსებობს ორგანიზაციული განვითარების პრაქტიკა/გამოცდილება, ან, არსებობის შემთხვევაში 
      ფრაგმენტული და არათანმიმდევრულია.`,

      "2": `ორგანიზაციაში სტრუქტურული ერთეულების მენეჯერები დაკავებულები არიან უფრო მეტად საკუთარი 
       საქმიანობის ოპტიმიზაციით ვიდრე კროს-ფუნქციური პროცესების გაუმჯობესებით.`,

      "3": `პროცესების გაუმჯობესება ხორციელდება კროს-ფუნქციური გუნდების მეშვეობით. პროცესების გასაუმჯობესებლად
       გამოიყენება სხვადასხვა მეთოდოლოგიები (Six Sigma, Lean, Agile და სხვა), თუმცა ორგანიზაციაში არაა 
       დანერგილი ერთგვაროვანი, სისტემატიზებული პრაქტიკა.`,

      "4": `კომპანიაში დანერგილია პროცესების განვითარების სისტემური მეთოდოლოგია და მიდგომა (მაგ. Lean,
       Six Sigma, Rummler Process Improvement Methodology და ა.შ.) გაუმჯობესების ღონისძიებების ეფექტიანობა
        ფასდება, რაოდენობრივი ინდიკატორებით კომპანიის სტრატეგიულ მიზნებთან და ამოცანებთან მიმართებაში.`,

      "5": `არსებული IT სისტემებიდან რეალურ დროში მიღებული ინფორმაცია მომხმარებლის გამოცდილების და პროცესის 
      შესრულების შესახებ აქტიურად გამოიყენება პროცესების გაუმჯობესებისთვის. პროცესების გაუმჯობესების ციკლი 
      უწყვეტი, სწრაფი და დინამიურია.`,
    },

    "ინფორმაციული ტექნოლოგიები": {
      "1": `კომპანიის საქმიანობაში ნაკლებად გამოიყენება ინფორმაციული ტექნოლოგიები.`,

      "2": `კომპანიაში არსებული IT სისტემები ფრაგმენტულია და ნაკლებადაა ერთმანეთთან ინტეგრირებული.`,

      "3": `კომპანიის IT სისტემები უზრუნველყოფს კროს-ფუნქციური პროცესების ეფექტიანად განხორციელებას.`,

      "4": `კომპანიის IT სისტემები ინტეგრირებულია. არსებული IT სისტემები პროცესების იდენტიფიცირების 
       ანალიზის, მოდელირების და გაუმჯობესების უმნიშვნელოვანესი წყაროა.`,

      "5": `სხვადასხვა ტექნოლოგიები, მათ შორის რობოტული პროცესების ავტომატიზაცია (RPA), ხელოვნური 
      ინტელექტი (AI) და მანქანური სწავლების ალგორითმები (ML) ინტეგრირებულია ბიზნეს პროცესებში, 
      რათა ეფექტიანად გახორციელდეს რუტინული დავალებების ავტომატიზაცია და გაიზარდოს ეფექტიანი 
      გადაწყვეტილების მიღების შესაძლებლობები.`,
    },

    "პროცესებზე დაფუძნებული ორგანიზაციული კულტურა": {
      "1": `კომპანიის მენეჯმენტს ნაკლებად აქვთ წარმოდგენა, თუ რას ნიშნავს ბიზნეს პროცესების მართვა.`,

      "2": `მენეჯმენტი აცნობიერებს საოპერაციო საქმიანობის/ბიზნეს-პროცესების გაუმჯობესების საჭიროებას, თუმცა
       ბიზნეს-პროცესების შესახებ ცოდნა არაერთგვაროვანია და მწირია.`,

      "3": `კომპანიის თანამშრომლებს აქვთ ერთგვაროვანი წარმოდგენა თუ რას ნიშნავს ბიზნეს-პროცესი. 
       თანამშრომლები ასრულებენ დაწესებულ სტანდარტებს.`,

      "4": `ბიზნეს პროცესებით მართვა კომპანიის მენეჯმენტის "ცხოვრების წესია". მენეჯერები ყოველდღიურ
       საქმიანობაში აქტიურად იყენებენ ბიზნეს-პროცესებთან დაკავშირებულ ტერმინოლოგიას 
       (მაგ. როგორიცაა ინფუთი, აუთფუთი, პროცესების მფლობელი, დანაკარგი).`,

      "5": `ბიზნეს პროცესების გაუმჯობესება კომპანიის თანამშრომლების "ცხოვრების წესია". თანამშრომლები
       აქტიურად არიან დაკავებულები პროცესების გაუმჯობესების იდეების გენერირებით, კარგი სამუშაო 
       პრაქტიკების იდენტიფიცირებითა და გაზიარებით.`,
    },
  };
  function formatText(text: string | number): string {
    if (typeof text === "string") {
      return text
        .replace(/[\n\r]/g, "")
        .replace(/\s+/g, " ")
        .trim();
    }
    return toString();
  }

  data.id = jsonData["id"];
  data.name = formatText(jsonData["თქვენი სახელი"]);
  data.companyName = formatText(jsonData["კომპანიის დასახელება"]);
  data.lastName = formatText(jsonData["თქვენი გვარი"]);
  data.email = formatText(
    jsonData[
      "ელექტრონული ფოსტა (აუცილებელია მიუთითოთ ვალიდური სამსახურებრივი ელ-ფოსტის მისამართი, წინააღმდეგ შემთხვევაში კვლევის მოკლე ანგარიში ვერ გამოგეგზავნებათ)"
    ]
  );
  for (const [key, value] of Object.entries(jsonData)) {
    const formattedInputKey: string = formatText(key);
    const formattedInputValue: string = formatText(value as string);

    for (const [outerKey, outerValue] of Object.entries(
      infoStructure as InfoStructure
    )) {
      const formattedOuterKey: string = formatText(outerKey);

      if (formattedOuterKey === formattedInputKey) {
        for (const [innerKey, innerValue] of Object.entries(outerValue)) {
          const formattedInnerValue = formatText(innerValue);

          if (formattedInnerValue === formattedInputValue) {
            data.matrix[formattedInputKey] = innerKey;
          }
        }
      }
    }
  }
  return data;
}
export default processData;
